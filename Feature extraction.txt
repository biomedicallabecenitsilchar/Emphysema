import os
import cv2
import numpy as np
from skimage.feature import hog
from sklearn.model_selection import train_test_split
from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

# Define dataset path and output folder
base_folder = '/content/drive/MyDrive/Pre-processed Images'
output_path = '/content/drive/MyDrive/HOG_FEATURES'
os.makedirs(output_path, exist_ok=True)

# HOG Feature extraction parameters
hog_params = {
    'orientations': 9,
    'pixels_per_cell': (8, 8),
    'cells_per_block': (2, 2),
    'block_norm': 'L2-Hys',
    'visualize': False,
    'transform_sqrt': True
}

# Function to extract HOG features from all images in a folder
def extract_hog_features(folder_path):
    features = []
    labels = []
    for class_name in os.listdir(folder_path):
        class_path = os.path.join(folder_path, class_name)
        if os.path.isdir(class_path):
            for img_name in os.listdir(class_path):
                img_path = os.path.join(class_path, img_name)
                if img_name.lower().endswith(('.jpg', '.jpeg', '.png')):
                    # Read the image in grayscale
                    img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
                    if img is not None:
                        # Resize image to a fixed size (128x128) for consistency
                        img_resized = cv2.resize(img, (128, 128))
                        # Extract HOG features
                        hog_feature = hog(img_resized, **hog_params)
                        features.append(hog_feature)
                        labels.append(class_name)
    return np.array(features), np.array(labels)

# Extract HOG features and labels
print("Extracting HOG features...")
features, labels = extract_hog_features(base_folder)
print(f"Total images processed: {len(features)}")

# Split the dataset into 70% training, 20% testing, and 10% validation
X_train, X_temp, y_train, y_temp = train_test_split(features, labels, test_size=0.3, random_state=42, stratify=labels)
X_test, X_val, y_test, y_val = train_test_split(X_temp, y_temp, test_size=0.333, random_state=42, stratify=y_temp)

# Save the splits as .npy files
np.save(os.path.join(output_path, 'X_train.npy'), X_train)
np.save(os.path.join(output_path, 'y_train.npy'), y_train)
np.save(os.path.join(output_path, 'X_test.npy'), X_test)
np.save(os.path.join(output_path, 'y_test.npy'), y_test)
np.save(os.path.join(output_path, 'X_val.npy'), X_val)
np.save(os.path.join(output_path, 'y_val.npy'), y_val)

print("HOG feature extraction and dataset splitting completed successfully!")
print(f"Training set: {len(X_train)} samples")
print(f"Testing set: {len(X_test)} samples")
print(f"Validation set: {len(X_val)} samples")